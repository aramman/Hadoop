# yum install openssl-devel
cd /etc/pki/CA/

ls -l crl/
ls -l newcerts/
ls -l private/
vi /etc/pki/tls/openssl.cnf
touch /etc/pki/CA/index.txt
echo 01 > /etc/pki/CA/serial

openssl genrsa -out private/myca.key -des3 2048
or openssl genrsa -out private/myca.key -aes128 2048

openssl req -new -x509 -key private/myca.key -days 365 > CA.crt
----------------
more refined way:
openssl req -new -sha256 -key private/myca.key -nodes -out rootCA.csr
openssl x509 -req -days 3650 -extensions v3_ca -in rootCA.csr -signkey private/myca.key -out rootCA.pem
------------------

mkdir certs
cd certs/
openssl req -new -newkey rsa:2048 -nodes -keyout dilithium.key -out dilithium.csr

openssl ca -in dilithium.csr -out dilithium.crt
openssl req -new -newkey rsa:2048 -nodes -keyout cluster1.key -out cluster1.csr
openssl ca -in cluster1.csr -out cluster1.crt
openssl req -new -newkey rsa:2048 -nodes -keyout cluster1.key -out cluster1.csr
openssl ca -in cluster1.csr -out cluster1.crt
  
openssl verify -CAfile /etc/pki/CA/CA.crt certs/dilithium.crt


openssl verify cluster1.crt
openssl verify dilithium.crt


Hadoop JKS steps: CA signed
---------------------------

 keytool -genkey -alias `hostname -s` -keyalg RSA -dname "CN=`hostname -f`,OU=Netxillon Technologies,O=Netxillon Technologies,L=Melbourne,ST=Victoria,C=AU" -keypass password -keystore keystore.jks -storepass password

 keytool -certreq -alias `hostname -s` -keyalg RSA -file `hostname -s`.csr -keystore keystore.jks -storepass password

 openssl ca -batch -passin pass:redhat -in `hostname -s`.csr -out `hostname -s`.crt
 
 keytool -import -keystore keystore.jks -file CA.crt -alias CARoot -storepass password -noprompt

 keytool -import -keystore keystore.jks -file `hostname -s`.crt -alias `hostname -s` -keypass password -storepass password -noprompt

 keytool -importcert -keystore truststore.jks -file CA.crt -alias CARoot -storepass password -noprompt
 
Good to do:
===========
keytool -exportcert -alias caroot -keystore /etc/security/keys/truststore.jks -file /usr/java/default/jre/lib/security/cacerts


Verify PEM format or not
========================

openssl x509 -inform PEM -in CA.crt
openssl x509 -inform PEM -in CA.pem
openssl x509 -inform PEM -in cm1.opta.com-server.pem

Verify cert presented by Server
--------------------------------
openssl s_client -verify 100 -showcerts -CAfile <($JAVA_HOME/bin/keytool -list -rfc -keystore $JAVA_HOME/jre/lib/security/jssecacerts -storepass changeit) -connect cm1.opta.com:7183

openssl s_client -connect cm1.opta.com:7183 2>/dev/null </dev/null |  sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
